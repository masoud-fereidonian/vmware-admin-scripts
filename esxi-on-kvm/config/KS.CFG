# Kickstart for ESXi host installation
accepteula 

# install to disk 0, which corresponds to $ESXIROOT/esxi$i/esxi$i-root.raw
install --firstdisk=local --overwritevmfs

# set the root password. a preprocessing script will sed this
rootpw HOSTPASSWORDPLACEHOLDER

# get VMK addresses from DHCP.  I'm controlling the addresses by using reservations on L0 in dhcpd
network --bootproto=dhcp --device=vmnic0

%firstboot --interpreter=busybox

# enable ssh on this host
vim-cmd hostsvc/enable_ssh
vim-cmd hostsvc/start_ssh
vim-cmd hostsvc/enable_esx_shell
vim-cmd hostsvc/start_esx_shell 

# set nested options in vmware/config
touch /etc/vmware/config
echo 'vmx.allowNested = TRUE' >>/etc/vmware/config
echo 'hv.assumeEnabled = TRUE' >>/etc/vmware/config

# set the security policies to allow mac forging (needed for a nested vswitch)
esxcli network vswitch standard policy security set -v vSwitch0 -m true -f true -p false

# Mount three NFS datastores on L0
esxcli storage nfs add -H 192.168.50.1 -s ESXIROOTPLACEHOLDER/VMs -v vm-datastore
esxcli storage nfs add -H 192.168.50.1 -s ESXIROOTPLACEHOLDER/ISO -v iso-datastore
esxcli storage nfs add -H 192.168.50.1 -s ESXIROOTPLACEHOLDER/OVA -v ova-datastore

# Set the host to pull NTP from L0
cat > /etc/ntp.conf << __NTP_CONFIG__
restrict default kod nomodify notrap noquerynopeer
restrict 127.0.0.1
server 192.168.20.1
__NTP_CONFIG__
/sbin/chkconfig ntpd on
/etc/init.d/ntpd start

# This section is stuff you definitely need for nesting to work right
esxcli network ip set --ipv6-enabled=false
esxcli system settings advanced set -o /UserVars/SuppressShellWarning -i 1
esxcli system settings advanced set -o /Power/CpuPolicy -s "High Performance" 
esxcli system settings advanced set -o /Net/FollowHardwareMac -i 1

# Hardware TSO use by L1 or especially L2 nested VMs is begging for weird packet drops / general flakiness
esxcli system settings advanced set -o /Net/UseHwTSO -i 0

# This section is all  stuff I've played with in an effort to reduce network flakiness in 7.x and 8.x
# You likely don't need any of it, but I'm leaving it all here for my own reference.
#
# sed -i "\$i localcli network nic ring current set -n vmnic0 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic1 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic2 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic3 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic4 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic5 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic6 -r 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic0 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic1 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic2 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic3 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic4 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic5 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic6 -m 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic0 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic1 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic2 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic3 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic4 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic5 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic6 -j 8192" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic0 -t 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic1 -t 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic2 -t 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic3 -t 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic4 -t 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic5 -t 4096" /etc/rc.local.d/local.sh
# sed -i "\$i localcli network nic ring current set -n vmnic6 -t 4096" /etc/rc.local.d/local.sh
# esxcli system settings advanced set -o /Net/NetpollSwLRO -i 0
# esxcli system settings advanced set -o /Net/VmxnetSwLROSL -i 0
# esxcli system settings advanced set -o /Net/Vmxnet3SwLRO -i 0
# esxcli system settings advanced set -o /Net/Vmxnet3HwLRO -i 0
# esxcli system settings advanced set -o /Net/Vmxnet2SwLRO -i 0
# esxcli system settings advanced set -o /Net/Vmxnet2HwLRO -i 0
# esxcli system settings advanced set -o /Net/TcpipDefLROEnabled -i 0
# esxcli system module parameters set -m vmxnet3 -p "disable_lro=1"
# esxcli system settings advanced set -o /Net/E1000TxZeroCopy -i 0
# esxcli system settings advanced set -o /Net/Vmxnet3NonTsoPacketGtMtuAllowed -i 1
# esxcli system settings advanced set -o /Net/DontOffloadInnerIPv6 -i 1
# esxcli system settings advanced set -o /Net/VmknicDoLroSplit -i 1
# esxcli system settings advanced set -o /Net/NetEnableSwCsumForLro -i 0
# esxcli system settings advanced set -o /Net/EnableOuterCsum -i 0
# esxcli system settings advanced set -o /Net/NoLocalCSum -i 1
# esxcli network nic software set --ipv4tso=0 -n vmnic0
# esxcli network nic software set --ipv4tso=0 -n vmnic1
# esxcli network nic software set --ipv4tso=0 -n vmnic2
# esxcli network nic software set --ipv4tso=0 -n vmnic3
# esxcli network nic software set --ipv4tso=0 -n vmnic4
# esxcli network nic software set --ipv4tso=0 -n vmnic5
# esxcli network nic software set --ipv4tso=0 -n vmnic6
# esxcli network nic software set --ipv4cso=0 -n vmnic0
# esxcli network nic software set --ipv4cso=0 -n vmnic1
# esxcli network nic software set --ipv4cso=0 -n vmnic2
# esxcli network nic software set --ipv4cso=0 -n vmnic3
# esxcli network nic software set --ipv4cso=0 -n vmnic4
# esxcli network nic software set --ipv4cso=0 -n vmnic5
# esxcli network nic software set --ipv4cso=0 -n vmnic6

# force vcenter client and similar to work with self-signed certs
vim-cmd hostsvc/advopt/update Config.HostAgent.ssl.keyStore.allowSelfSigned bool true
vim-cmd hostsvc/advopt/update Config.HostAgent.ssl.keyStore.allowAny bool true
vim-cmd hostsvc/advopt/update Config.HostAgent.plugins.solo.enableMob bool true

# this points the host logs to a directory on a NFS mount so its accessible easily from L0
esxcli system syslog config set --logdir=/vmfs/volumes/vm-datastore/esxi-hostlogs --logdir-unique=true
esxcli system syslog reload

# this forces the host to regenerate its self-signed certificate.  I've run into problems with
# the one it ships with in some browsers because the host name doesn't match
mv /etc/vmware/ssl/rui.crt /etc/vmware/ssl/orig.rui.crt
mv /etc/vmware/ssl/rui.key /etc/vmware/ssl/orig.rui.key
/sbin/generate-certificates

# put this host in maintenance mode after install
esxcli system maintenanceMode set --enable true

# reboot after install
esxcli system shutdown reboot -r 1 -d 10
